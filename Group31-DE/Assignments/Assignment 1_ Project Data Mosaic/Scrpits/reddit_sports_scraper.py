# -*- coding: utf-8 -*-
"""reddit_sports_scraper.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13cRaSEvg3YdRBbvQZGwPzJyR06kmIB40
"""

!pip install pandas praw

import praw
import pandas as pd
from datetime import datetime, timedelta

CLIENT_ID = 'ffm_9E8Ca89J2WxhWxbihQ'
CLIENT_SECRET = 'pDp8znm5JCZjLjNUPgse4nwjVke2nA'
USER_AGENT = 'Reddit-crawler'

def fetch_data_reddit():
    reddit = praw.Reddit(
        client_id=CLIENT_ID,
        client_secret=CLIENT_SECRET,
        user_agent=USER_AGENT
    )

    subreddit = reddit.subreddit("cricket")
    posts = []

    for post in subreddit.search("IPL", limit=300):
        posts.append([
            subreddit.display_name,
            post.title,
            post.downs,
            post.score,
            post.num_comments,
            post.url,
            post.ups,
            post.upvote_ratio,
            post.created_utc
        ])
    return posts

def save_reddit_csv(posts):
    df = pd.DataFrame(
        posts,
        columns=[
            "Subreddit", "Title", "Downs", "Score", "Comments",
            "URL", "Ups", "Upvote_Ratio", "Timestamp"
        ]
    )

    df["Timestamp"] = pd.to_datetime(df["Timestamp"], unit="s").dt.strftime("%d-%m-%Y")

    df.to_csv("Reddit_IPL_discussions.csv", index=False, encoding="utf-8")
    print("CSV file saved: Reddit_IPL_discussions.csv")

if __name__ == "__main__":
    posts = fetch_data_reddit()
    save_reddit_csv(posts)

import praw
import pandas as pd
from datetime import datetime

CLIENT_ID = 'ffm_9E8Ca89J2WxhWxbihQ'
CLIENT_SECRET = 'pDp8znm5JCZjLjNUPgse4nwjVke2nA'
USER_AGENT = 'Reddit-crawler'

def fetch_posts_and_comments():
    reddit = praw.Reddit(
        client_id=CLIENT_ID,
        client_secret=CLIENT_SECRET,
        user_agent=USER_AGENT
    )

    subreddit = reddit.subreddit("Sports")

    posts_list = []
    comments_list = []

    for post in subreddit.search("IPL", sort="new", limit=300):
        posts_list.append({
            'subreddit': subreddit.display_name,
            'title': post.title,
            'selftext': post.selftext,
            'downs': post.downs,
            'score': post.score,
            'num_comments': post.num_comments,
            'url': post.url,
            'ups': post.ups,
            'upvote_ratio': post.upvote_ratio,
            'created_utc': post.created_utc
        })

        post.comments.replace_more(limit=0)
        for comment in post.comments.list():
            comments_list.append({
                'post_title': post.title,
                'post_selftext': post.selftext,
                'comment_id': comment.id,
                'comment_body': comment.body,
                'comment_author': comment.author.name if comment.author else None,
                'comment_score': comment.score,
                'comment_created_utc': comment.created_utc
            })

    posts_list = sorted(posts_list, key=lambda x: x['created_utc'], reverse=True)

    return posts_list, comments_list

def save_csv(posts, comments):

    if posts:
        posts_df = pd.DataFrame(posts)
        posts_df['created_utc'] = pd.to_datetime(posts_df['created_utc'], unit='s').dt.strftime("%d-%m-%Y %H:%M:%S")
        posts_df.to_csv("reddit_posts.csv", index=False, encoding="utf-8")
        print("Posts CSV saved as reddit_posts.csv")
    else:
        print("No posts found")

    if comments:
        comments_df = pd.DataFrame(comments)
        comments_df['comment_created_utc'] = pd.to_datetime(comments_df['comment_created_utc'], unit='s').dt.strftime("%d-%m-%Y %H:%M:%S")
        comments_df.to_csv("reddit_IPL_comments.csv", index=False, encoding="utf-8")
        print("Comments CSV saved as reddit_IPL_comments.csv")
    else:
        print("No comments found.")

if __name__ == "__main__":
    posts, comments = fetch_posts_and_comments()
    save_csv(posts, comments)

