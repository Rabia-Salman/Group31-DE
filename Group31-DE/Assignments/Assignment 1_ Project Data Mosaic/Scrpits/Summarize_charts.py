# -*- coding: utf-8 -*-
"""summarization chart.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1en70U760WT_Pl5F6ngBiP3QeBic0SLVH
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

def read_csv(file_path):
    """Reads a CSV file and returns a DataFrame."""
    return pd.read_csv(file_path)

def clean_data(df):
    """Cleans data by handling missing values and incorrect data types."""
    for col in df.select_dtypes(include=['object']).columns:
        df[col].fillna(df[col].mode()[0], inplace=True)  # Fill categorical missing values with mode
    for col in df.select_dtypes(include=['number']).columns:
        df[col].fillna(df[col].median(), inplace=True)  # Fill numerical missing values with median
    return df

def summarize_data(df, name):
    """Prints summary statistics of a DataFrame."""
    print(f"\nSummary for {name}:")
    print(df.info())
    print("\nMissing Values:\n", df.isnull().sum())
    print("\nDescriptive Statistics:\n", df.describe())

def analyze_data(df, name):
    """Performs analysis and visualization for the dataset."""
    summarize_data(df, name)

    if 'date' in df.columns:
        df['date'] = pd.to_datetime(df['date'], errors='coerce')
        df.set_index('date', inplace=True)
        df.resample('Y').size().plot(title=f'Trend Analysis for {name}', legend=True)
        plt.show()

    if 'region' in df.columns and 'interest' in df.columns:
        plt.figure(figsize=(10, 5))
        sns.barplot(x='region', y='interest', data=df)
        plt.xticks(rotation=90)
        plt.title(f'IPL Interest by Region - {name}')
        plt.show()

def process_ipl_interest_by_region():
    file_path = 'E:/MS BOOKS/Semester 2/Data Engineerning for AI/Mosaic pattern as1/Assignment1/Datasets/Raw/Google_Trends_dataset/ipl_interest_by_region.csv'
    df = read_csv(file_path)
    df = clean_data(df)
    analyze_data(df, 'IPL Interest by Region')

def process_ipl_sponsors_trends():
    file_path = 'E:/MS BOOKS/Semester 2/Data Engineerning for AI/Mosaic pattern as1/Assignment1/Datasets/Raw/Google_Trends_dataset/ipl_sponsors_trends.csv'
    df = read_csv(file_path)
    df = clean_data(df)
    analyze_data(df, 'IPL Sponsors Trends')

def process_sports_ipl_trends():
    file_path = 'E:/MS BOOKS/Semester 2/Data Engineerning for AI/Mosaic pattern as1/Assignment1/Datasets/Raw/Google_Trends_dataset/Sports_IPL_trends_2008_2025.csv'
    df = read_csv(file_path)
    df = clean_data(df)
    analyze_data(df, 'Sports IPL Trends')

def process_ipl_sponsors_stock_data():
    file_path = 'E:/MS BOOKS/Semester 2/Data Engineerning for AI/Mosaic pattern as1/Assignment1/Datasets/Raw/YFinance_dataset/ipl_sponsors_stock_data.csv'
    df = read_csv(file_path)
    df = clean_data(df)
    analyze_data(df, 'IPL Sponsors Stock Data')

def process_deliveries():
    file_path = 'E:/MS BOOKS/Semester 2/Data Engineerning for AI/Mosaic pattern as1/Assignment1/Datasets/Raw/Kaggle_dataset/deliveries.csv'
    df = read_csv(file_path)
    df = clean_data(df)
    analyze_data(df, 'Deliveries')

def process_matches():
    file_path = 'E:/MS BOOKS/Semester 2/Data Engineerning for AI/Mosaic pattern as1/Assignment1/Datasets/Raw/Kaggle_dataset/matches.csv'
    df = read_csv(file_path)
    df = clean_data(df)
    analyze_data(df, 'Matches')

def process_reddit_ipl_comments():
    file_path = 'E:/MS BOOKS/Semester 2/Data Engineerning for AI/Mosaic pattern as1/Assignment1/Datasets/Raw/Reddit_dataset/reddit_IPL_comments.csv'
    df = read_csv(file_path)
    df = clean_data(df)
    analyze_data(df, 'Reddit IPL Comments')

def process_reddit_ipl_discussions():
    file_path = 'E:/MS BOOKS/Semester 2/Data Engineerning for AI/Mosaic pattern as1/Assignment1/Datasets/Raw/Reddit_dataset/Reddit_IPL_discussions.csv'
    df = read_csv(file_path)
    df = clean_data(df)
    analyze_data(df, 'Reddit IPL Discussions')

def process_reddit_posts():
    file_path = 'E:/MS BOOKS/Semester 2/Data Engineerning for AI/Mosaic pattern as1/Assignment1/Datasets/Raw/Reddit_dataset/reddit_posts.csv'
    df = read_csv(file_path)
    df = clean_data(df)
    analyze_data(df, 'Reddit Posts')

def main():
    process_ipl_interest_by_region()
    process_ipl_sponsors_trends()
    process_sports_ipl_trends()
    process_ipl_sponsors_stock_data()
    process_deliveries()
    process_matches()
    process_reddit_ipl_comments()
    process_reddit_ipl_discussions()
    process_reddit_posts()

if __name__ == "__main__":
    main()

